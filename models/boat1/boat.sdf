<sdf version='1.6'>
  <model name='boat'>
    <link name='base_link'>
      <pose>0 0 0 0 -0 0</pose>
      <inertial>
        <pose >0 0 0.124229 0 -0 0</pose>
        <mass>227</mass>
        <inertia>
          <ixx>181.42</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>408.203</iyy>
          <iyz>0</iyz>
          <izz>495.037</izz>
        </inertia>
      </inertial>
      <visual name='base_link_fixed_joint_lump__dummy_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://boat/meshes/body.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name='base_link_fixed_joint_lump__left_battery_visual_visual_1'>
        <pose>0 -0.03 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://boat/meshes/battery.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/DarkGrey</name>
            <uri>__default__</uri>
          </script>
        </material>
      </visual>
      <visual name='base_link_fixed_joint_lump__right_battery_visual_visual_2'>
        <pose>0 -2.03 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://boat/meshes/battery.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/DarkGrey</name>
            <uri>__default__</uri>
          </script>
        </material>
      </visual>
      <visual name='right_engine_link_visual'>
        <pose>-2.37378 -1.02713 0.318237 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://boat/meshes//engine.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name='left_engine_link_visual'>
        <pose>-2.37378 1.02713 0.318237 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://boat/meshes//engine.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <link name='left_propeller_link'>
      <pose>-2.65193 1.02713 -0.191134 0 1.57079 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.008545</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.008545</iyy>
          <iyz>0</iyz>
          <izz>0.0144</izz>
        </inertia>
      </inertial>
      <visual name='left_propeller_link_visual'>
        <pose>0 0 0 0 -1.57079 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://boat/meshes/propeller.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='left_engine_propeller_joint' type='revolute'>
      <child>left_propeller_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <!-- <damping>0.05</damping>
          <friction>0.05</friction> -->
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='right_propeller_link'>
      <pose>-2.65193 -1.02713 -0.191134 0 1.57079 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.008545</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.008545</iyy>
          <iyz>0</iyz>
          <izz>0.0144</izz>
        </inertia>
      </inertial>
      <visual name='right_propeller_link_visual'>
        <pose>0 0 0 0 -1.57079 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://boat/meshes/propeller.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <joint name='right_engine_propeller_joint' type='revolute'>
      <child>right_propeller_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <!-- <damping>0.05</damping>
          <friction>0.05</friction> -->
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>




    <link name="cam_link">
      <pose>0 0 0.5 0 0 0 </pose>
      <inertial>
        <mass>0.01</mass>
        <inertia>
          <ixx>0.001</ixx>
          <iyy>0.001</iyy>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <visual name='cam_link'>
    	<pose>0 0 0.15 0 1.5707 0</pose>
    	<geometry>
    		<cylinder>
    			<radius>.005</radius>
    			<length>.018</length>
    		</cylinder>
    	</geometry>
    </visual>
    <sensor name="cam" type="camera" >
      <pose>0 0 0.15 0 0 0</pose>
      <camera>
        <horizontal_fov>1.2</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>1000</far>
        </clip>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <always_on>true</always_on>
        <update_rate>30</update_rate>
        <cameraName>boat1_cam</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>boat1_camera_link</frameName>
      </plugin>
    </sensor>
    </link>
    <joint name="camera_mount" type="fixed">
      <child>cam_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>

        <!--add lidar-->
    <link name="hokuyo_link">
      <pose>1.2 0 0 0 0 0</pose>
      <visual name="visual">
        <pose>1.2 0 0.27 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://hokuyo/meshes/hokuyo.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <mass>0.016</mass>
        <inertia>
            <ixx>0.0001</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.0001</iyy>
            <iyz>0</iyz>
            <izz>0.0001</izz>
            <!-- low intertia necessary to avoid not disturb the drone -->
        </inertia>
      </inertial>

      <sensor type="ray" name="laser">
        <pose>1.2 0 0.3 3.14 0 0</pose>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>32</samples>
              <resolution>1</resolution>
              <min_angle>-1.2</min_angle>
              <max_angle>1.2</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>30</max>
            <resolution>0.1</resolution>
          </range>
          <!-- <noise>
            <type>Gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise> -->
        </ray>
        <plugin name="hokuyo_node" filename="libgazebo_ros_laser.so">
          <robotNamespace>boat1</robotNamespace>
          <topicName>laser/scan</topicName>
          <frameName>hokuyo_sensor_link</frameName>
        </plugin>
      </sensor>
    </link>

    <joint name="hokuyo_joint" type="fixed">
      <child>hokuyo_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>

    
    <plugin name='usv_dynamics_wamv_dynamics_plugin' filename='libgazebo_usv_dynamics_plugin.so'>
      <bodyName>base_link</bodyName>
      <waterLevel>0.0</waterLevel>
      <waterDensity>997.8</waterDensity>
      <xDotU>0.0</xDotU>
      <yDotV>0.0</yDotV>
      <nDotR>0.0</nDotR>
      <xU>51.3</xU>
      <xUU>72.4</xUU>
      <yV>40.0</yV>
      <yVV>0.0</yVV>
      <zW>500.0</zW>
      <kP>50.0</kP>
      <mQ>50.0</mQ>
      <nR>400.0</nR>
      <nRR>0.0</nRR>
      <hullRadius>0.213</hullRadius>
      <boatWidth>2.4</boatWidth>
      <boatLength>4.9</boatLength>
      <length_n>2</length_n>
      <wave_model>ocean_waves</wave_model>
    </plugin>
   

    <link name='imu_link'>
      <!-- <pose>0 0 0 0 0 3.1415927</pose> -->
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.015</mass>
        <inertia>
          <ixx>1e-05</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-05</iyy>
          <iyz>0</iyz>
          <izz>1e-05</izz>
        </inertia>
      </inertial>
      <sensor name="imu_sensor" type="imu">
        <pose>0 0 0 3.141593 0 0</pose>
        <always_on>1</always_on>
        <update_rate>1000.0</update_rate>
      </sensor>
    </link>
    <joint name='imu_joint' type='revolute'>
      <child>imu_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
          <effort>0</effort>
          <velocity>0</velocity>
        </limit>
        <dynamics>
          <damping>0.7</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

    <plugin name="ArduCopter_Plugin" filename="libArduPilotPlugin.so">
      <fdm_addr>127.0.0.1</fdm_addr>
      <fdm_port_in>9002</fdm_port_in>
      <fdm_port_out>9003</fdm_port_out>
      <!--
          Require by APM :
          Only change model and gazebo from XYZ to XY-Z coordinates
      -->
      <!-- 3.141593 -->
      <modelXYZToAirplaneXForwardZDown>0 0 0 3.141593 0 0</modelXYZToAirplaneXForwardZDown>
      <gazeboXYZToNED>0 0 0 3.141593 0 0</gazeboXYZToNED>
      <imuName>boat::imu_link::imu_sensor</imuName>
      <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>
      <!--
          incoming control command [0, 1]
          so offset it by 0 to get [0, 1]
          and divide max target by 1.
          offset = 0
          multiplier = 838 max rpm / 1 = 838
        -->
      <control channel="0">
        <type>VELOCITY</type>
        <offset>-0.5</offset>
        <p_gain>1</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>10</cmd_max>
        <cmd_min>-10</cmd_min>
        <jointName>left_engine_propeller_joint</jointName>
        <multiplier>-100</multiplier>
      </control>
      <control channel="2">
        <type>VELOCITY</type>
        <offset>-0.5</offset>
        <p_gain>1</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>10</cmd_max>
        <cmd_min>-10</cmd_min>
        <jointName>right_engine_propeller_joint</jointName>
        <multiplier>-100</multiplier>
      </control>
      
    </plugin>
    <plugin name="rotor_1_blade_1" filename="libLiftDragPlugin.so">
      <a0>2</a0>
      <alpha_stall>4</alpha_stall>
      <cla>10.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>997</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>right_propeller_link</link_name>
    </plugin>
    <plugin name="rotor_1_blade_2" filename="libLiftDragPlugin.so">
      <a0>2</a0>
      <alpha_stall>4</alpha_stall>
      <cla>10.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>997</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>left_propeller_link</link_name>
    </plugin>


        


  </model>
</sdf>
